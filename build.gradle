/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

shadowJar {
   mergeServiceFiles()
   destinationDirectory = file('release')
   archiveVersion =  "v${release_version_major}"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

clean.doFirst {
    delete fileTree('release') {
      include '*.jar'
    }
}

application {
    // Define the main class for the application.
    mainClass = 'passive.signature.ReDoSDetectorTab'
}

processResources {
    filteringCharset = 'UTF-8'
    filesMatching ('**/*.properties') {
       expand(project.properties)
       // naitive2ascii
       filter(org.apache.tools.ant.filters.EscapeUnicode)
    }
}

task release(type: Zip, dependsOn: ['build']) {
    archiveBaseName ="${rootProject.name}_v${release_version_major}.${release_version_minor}"
    destinationDirectory = file("${projectDir}")
    from rootProject.rootDir
    include '*'
    include 'gradle/**'
    include 'image/**'
    include 'src/**'
    include 'libs/**'
    include 'release/*.jar'
    exclude 'build'
    exclude 'nbproject'
    exclude '.git'
    exclude '.gradle'
    exclude '*.zip'
}

dependencies {
    // https://github.com/raise-isayan/BurpExtensionCommons
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // https://mvnrepository.com/artifact/net.portswigger.burp.extensions/montoya-api
    implementation 'net.portswigger.burp.extensions:montoya-api:2025.2'

    // https://mvnrepository.com/artifact/codes.quine.labs/recheck-core
    implementation 'codes.quine.labs:recheck-core_2.13:4.5.0'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
